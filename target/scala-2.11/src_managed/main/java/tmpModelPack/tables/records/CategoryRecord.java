/**
 * This class is generated by jOOQ
 */
package tmpModelPack.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import tmpModelPack.tables.Category;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Category", schema = "talent")
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 699240903;

    /**
     * Setter for <code>talent.Category.Category_ID</code>.
     */
    public void setCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>talent.Category.Category_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "Category_ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>talent.Category.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>talent.Category.Name</code>.
     */
    @Column(name = "Name", unique = true, nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>talent.Category.Number_Of_Posts</code>.
     */
    public void setNumberOfPosts(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>talent.Category.Number_Of_Posts</code>.
     */
    @Column(name = "Number_Of_Posts", nullable = false, precision = 10)
    @NotNull
    public Integer getNumberOfPosts() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Category.CATEGORY.CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Category.CATEGORY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Category.CATEGORY.NUMBER_OF_POSTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getNumberOfPosts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value1(Integer value) {
        setCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord value3(Integer value) {
        setNumberOfPosts(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(Category.CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(Integer categoryId, String name, Integer numberOfPosts) {
        super(Category.CATEGORY);

        set(0, categoryId);
        set(1, name);
        set(2, numberOfPosts);
    }
}
