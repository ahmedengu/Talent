/**
 * This class is generated by jOOQ
 */
package tmpModelPack.tables.records;


import java.sql.Date;
import java.sql.Time;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import tmpModelPack.tables.Post;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Post", schema = "talent")
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record6<Integer, Integer, Integer, Double, Date, Time> {

    private static final long serialVersionUID = 1223842527;

    /**
     * Setter for <code>talent.Post.Post_ID</code>.
     */
    public void setPostId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>talent.Post.Post_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "Post_ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getPostId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>talent.Post.User_ID</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>talent.Post.User_ID</code>.
     */
    @Column(name = "User_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>talent.Post.Category_ID</code>.
     */
    public void setCategoryId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>talent.Post.Category_ID</code>.
     */
    @Column(name = "Category_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getCategoryId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>talent.Post.Total_Rating</code>.
     */
    public void setTotalRating(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>talent.Post.Total_Rating</code>.
     */
    @Column(name = "Total_Rating", nullable = false, precision = 12)
    @NotNull
    public Double getTotalRating() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>talent.Post.Date</code>.
     */
    public void setDate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>talent.Post.Date</code>.
     */
    @Column(name = "Date", nullable = false)
    @NotNull
    public Date getDate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>talent.Post.Time</code>.
     */
    public void setTime(Time value) {
        set(5, value);
    }

    /**
     * Getter for <code>talent.Post.Time</code>.
     */
    @Column(name = "Time", nullable = false)
    @NotNull
    public Time getTime() {
        return (Time) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Double, Date, Time> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Double, Date, Time> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Post.POST.POST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Post.POST.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Post.POST.CATEGORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Post.POST.TOTAL_RATING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Post.POST.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field6() {
        return Post.POST.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPostId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getTotalRating();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value6() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value1(Integer value) {
        setPostId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value3(Integer value) {
        setCategoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value4(Double value) {
        setTotalRating(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value5(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value6(Time value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord values(Integer value1, Integer value2, Integer value3, Double value4, Date value5, Time value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostRecord
     */
    public PostRecord() {
        super(Post.POST);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(Integer postId, Integer userId, Integer categoryId, Double totalRating, Date date, Time time) {
        super(Post.POST);

        set(0, postId);
        set(1, userId);
        set(2, categoryId);
        set(3, totalRating);
        set(4, date);
        set(5, time);
    }
}
