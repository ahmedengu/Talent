/**
 * This class is generated by jOOQ
 */
package tmpModelPack.tables.records;


import java.sql.Date;
import java.sql.Time;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import tmpModelPack.tables.Notification;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Notification", schema = "talent")
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord> implements Record5<Integer, Integer, Date, Time, String> {

    private static final long serialVersionUID = -196282620;

    /**
     * Setter for <code>talent.Notification.Notification_ID</code>.
     */
    public void setNotificationId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>talent.Notification.Notification_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "Notification_ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getNotificationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>talent.Notification.User_ID</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>talent.Notification.User_ID</code>.
     */
    @Column(name = "User_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>talent.Notification.Date</code>.
     */
    public void setDate(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>talent.Notification.Date</code>.
     */
    @Column(name = "Date", nullable = false)
    @NotNull
    public Date getDate() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>talent.Notification.Time</code>.
     */
    public void setTime(Time value) {
        set(3, value);
    }

    /**
     * Getter for <code>talent.Notification.Time</code>.
     */
    @Column(name = "Time", nullable = false)
    @NotNull
    public Time getTime() {
        return (Time) get(3);
    }

    /**
     * Setter for <code>talent.Notification.Type</code>.
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>talent.Notification.Type</code>.
     */
    @Column(name = "Type", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getType() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Date, Time, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Date, Time, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Notification.NOTIFICATION.NOTIFICATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Notification.NOTIFICATION.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Notification.NOTIFICATION.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field4() {
        return Notification.NOTIFICATION.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Notification.NOTIFICATION.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getNotificationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value4() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificationRecord value1(Integer value) {
        setNotificationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificationRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificationRecord value3(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificationRecord value4(Time value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificationRecord value5(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotificationRecord values(Integer value1, Integer value2, Date value3, Time value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRecord
     */
    public NotificationRecord() {
        super(Notification.NOTIFICATION);
    }

    /**
     * Create a detached, initialised NotificationRecord
     */
    public NotificationRecord(Integer notificationId, Integer userId, Date date, Time time, String type) {
        super(Notification.NOTIFICATION);

        set(0, notificationId);
        set(1, userId);
        set(2, date);
        set(3, time);
        set(4, type);
    }
}
