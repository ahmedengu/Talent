/**
 * This class is generated by jOOQ
 */
package tmpModelPack.tables.daos;


import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import tmpModelPack.tables.User;
import tmpModelPack.tables.records.UserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, tmpModelPack.tables.pojos.User, Integer> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, tmpModelPack.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, tmpModelPack.tables.pojos.User.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(tmpModelPack.tables.pojos.User object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>User_ID IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByUserId(Integer... values) {
        return fetch(User.USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>User_ID = value</code>
     */
    public tmpModelPack.tables.pojos.User fetchOneByUserId(Integer value) {
        return fetchOne(User.USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>Nickname IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByNickname(String... values) {
        return fetch(User.USER.NICKNAME, values);
    }

    /**
     * Fetch a unique record that has <code>Nickname = value</code>
     */
    public tmpModelPack.tables.pojos.User fetchOneByNickname(String value) {
        return fetchOne(User.USER.NICKNAME, value);
    }

    /**
     * Fetch records that have <code>Username IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByUsername(String... values) {
        return fetch(User.USER.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>Username = value</code>
     */
    public tmpModelPack.tables.pojos.User fetchOneByUsername(String value) {
        return fetchOne(User.USER.USERNAME, value);
    }

    /**
     * Fetch records that have <code>Password IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>Email IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>Date_Of_Birth IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByDateOfBirth(Date... values) {
        return fetch(User.USER.DATE_OF_BIRTH, values);
    }

    /**
     * Fetch records that have <code>Bio IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByBio(String... values) {
        return fetch(User.USER.BIO, values);
    }

    /**
     * Fetch records that have <code>Profile_Picture IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByProfilePicture(byte[]... values) {
        return fetch(User.USER.PROFILE_PICTURE, values);
    }

    /**
     * Fetch records that have <code>Facebook IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByFacebook(String... values) {
        return fetch(User.USER.FACEBOOK, values);
    }

    /**
     * Fetch records that have <code>Youtube IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByYoutube(String... values) {
        return fetch(User.USER.YOUTUBE, values);
    }

    /**
     * Fetch records that have <code>Location IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByLocation(byte[]... values) {
        return fetch(User.USER.LOCATION, values);
    }

    /**
     * Fetch records that have <code>Profile_Link IN (values)</code>
     */
    public List<tmpModelPack.tables.pojos.User> fetchByProfileLink(String... values) {
        return fetch(User.USER.PROFILE_LINK, values);
    }

    /**
     * Fetch a unique record that has <code>Profile_Link = value</code>
     */
    public tmpModelPack.tables.pojos.User fetchOneByProfileLink(String value) {
        return fetchOne(User.USER.PROFILE_LINK, value);
    }
}
