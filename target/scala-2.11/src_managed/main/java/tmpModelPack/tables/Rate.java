/**
 * This class is generated by jOOQ
 */
package tmpModelPack.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import tmpModelPack.Keys;
import tmpModelPack.Talent;
import tmpModelPack.tables.records.RateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rate extends TableImpl<RateRecord> {

    private static final long serialVersionUID = -890787595;

    /**
     * The reference instance of <code>talent.Rate</code>
     */
    public static final Rate RATE = new Rate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RateRecord> getRecordType() {
        return RateRecord.class;
    }

    /**
     * The column <code>talent.Rate.Notification_ID</code>.
     */
    public final TableField<RateRecord, Integer> NOTIFICATION_ID = createField("Notification_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>talent.Rate.Post_ID</code>.
     */
    public final TableField<RateRecord, Integer> POST_ID = createField("Post_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>talent.Rate.Rating</code>.
     */
    public final TableField<RateRecord, Double> RATING = createField("Rating", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * Create a <code>talent.Rate</code> table reference
     */
    public Rate() {
        this("Rate", null);
    }

    /**
     * Create an aliased <code>talent.Rate</code> table reference
     */
    public Rate(String alias) {
        this(alias, RATE);
    }

    private Rate(String alias, Table<RateRecord> aliased) {
        this(alias, aliased, null);
    }

    private Rate(String alias, Table<RateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Talent.TALENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RateRecord> getPrimaryKey() {
        return Keys.KEY_RATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RateRecord>> getKeys() {
        return Arrays.<UniqueKey<RateRecord>>asList(Keys.KEY_RATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RateRecord, ?>>asList(Keys.FKRATE67125, Keys.FKRATE54619);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rate as(String alias) {
        return new Rate(alias, this);
    }

    /**
     * Rename this table
     */
    public Rate rename(String name) {
        return new Rate(name, null);
    }
}
