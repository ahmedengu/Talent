/**
 * This class is generated by jOOQ
 */
package tmpModelPack.tables;


import java.sql.Date;
import java.sql.Time;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import tmpModelPack.Keys;
import tmpModelPack.Talent;
import tmpModelPack.tables.records.PostRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Post extends TableImpl<PostRecord> {

    private static final long serialVersionUID = 1815171798;

    /**
     * The reference instance of <code>talent.Post</code>
     */
    public static final Post POST = new Post();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostRecord> getRecordType() {
        return PostRecord.class;
    }

    /**
     * The column <code>talent.Post.Post_ID</code>.
     */
    public final TableField<PostRecord, Integer> POST_ID = createField("Post_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>talent.Post.User_ID</code>.
     */
    public final TableField<PostRecord, Integer> USER_ID = createField("User_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>talent.Post.Category_ID</code>.
     */
    public final TableField<PostRecord, Integer> CATEGORY_ID = createField("Category_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>talent.Post.Total_Rating</code>.
     */
    public final TableField<PostRecord, Double> TOTAL_RATING = createField("Total_Rating", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>talent.Post.Date</code>.
     */
    public final TableField<PostRecord, Date> DATE = createField("Date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>talent.Post.Time</code>.
     */
    public final TableField<PostRecord, Time> TIME = createField("Time", org.jooq.impl.SQLDataType.TIME.nullable(false), this, "");

    /**
     * Create a <code>talent.Post</code> table reference
     */
    public Post() {
        this("Post", null);
    }

    /**
     * Create an aliased <code>talent.Post</code> table reference
     */
    public Post(String alias) {
        this(alias, POST);
    }

    private Post(String alias, Table<PostRecord> aliased) {
        this(alias, aliased, null);
    }

    private Post(String alias, Table<PostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Talent.TALENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PostRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostRecord> getPrimaryKey() {
        return Keys.KEY_POST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostRecord>> getKeys() {
        return Arrays.<UniqueKey<PostRecord>>asList(Keys.KEY_POST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostRecord, ?>>asList(Keys.FKPOST790237, Keys.FKPOST991094);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Post as(String alias) {
        return new Post(alias, this);
    }

    /**
     * Rename this table
     */
    public Post rename(String name) {
        return new Post(name, null);
    }
}
