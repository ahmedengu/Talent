/**
 * This class is generated by jOOQ
 */
package models.talentDB;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import models.talentDB.tables.Category;
import models.talentDB.tables.Comment;
import models.talentDB.tables.Databasechangeloglock;
import models.talentDB.tables.Follower;
import models.talentDB.tables.Like;
import models.talentDB.tables.Notification;
import models.talentDB.tables.Post;
import models.talentDB.tables.PostTag;
import models.talentDB.tables.Rate;
import models.talentDB.tables.Tag;
import models.talentDB.tables.TopRated;
import models.talentDB.tables.User;
import models.talentDB.tables.records.CategoryRecord;
import models.talentDB.tables.records.CommentRecord;
import models.talentDB.tables.records.DatabasechangeloglockRecord;
import models.talentDB.tables.records.FollowerRecord;
import models.talentDB.tables.records.LikeRecord;
import models.talentDB.tables.records.NotificationRecord;
import models.talentDB.tables.records.PostRecord;
import models.talentDB.tables.records.PostTagRecord;
import models.talentDB.tables.records.RateRecord;
import models.talentDB.tables.records.TagRecord;
import models.talentDB.tables.records.TopRatedRecord;
import models.talentDB.tables.records.UserRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>talent</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
    public static final Identity<NotificationRecord, Integer> IDENTITY_NOTIFICATION = Identities0.IDENTITY_NOTIFICATION;
    public static final Identity<PostRecord, Integer> IDENTITY_POST = Identities0.IDENTITY_POST;
    public static final Identity<TagRecord, Integer> IDENTITY_TAG = Identities0.IDENTITY_TAG;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = UniqueKeys0.KEY_CATEGORY_PRIMARY;
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_NAME = UniqueKeys0.KEY_CATEGORY_NAME;
    public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = UniqueKeys0.KEY_COMMENT_PRIMARY;
    public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
    public static final UniqueKey<FollowerRecord> KEY_FOLLOWER_PRIMARY = UniqueKeys0.KEY_FOLLOWER_PRIMARY;
    public static final UniqueKey<LikeRecord> KEY_LIKE_PRIMARY = UniqueKeys0.KEY_LIKE_PRIMARY;
    public static final UniqueKey<NotificationRecord> KEY_NOTIFICATION_PRIMARY = UniqueKeys0.KEY_NOTIFICATION_PRIMARY;
    public static final UniqueKey<PostRecord> KEY_POST_PRIMARY = UniqueKeys0.KEY_POST_PRIMARY;
    public static final UniqueKey<PostTagRecord> KEY_POST_TAG_PRIMARY = UniqueKeys0.KEY_POST_TAG_PRIMARY;
    public static final UniqueKey<PostTagRecord> KEY_POST_TAG_TAG_ID = UniqueKeys0.KEY_POST_TAG_TAG_ID;
    public static final UniqueKey<PostTagRecord> KEY_POST_TAG_POST_ID = UniqueKeys0.KEY_POST_TAG_POST_ID;
    public static final UniqueKey<RateRecord> KEY_RATE_PRIMARY = UniqueKeys0.KEY_RATE_PRIMARY;
    public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = UniqueKeys0.KEY_TAG_PRIMARY;
    public static final UniqueKey<TagRecord> KEY_TAG_NAME = UniqueKeys0.KEY_TAG_NAME;
    public static final UniqueKey<TopRatedRecord> KEY_TOP_RATED_PRIMARY = UniqueKeys0.KEY_TOP_RATED_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_NICKNAME = UniqueKeys0.KEY_USER_NICKNAME;
    public static final UniqueKey<UserRecord> KEY_USER_USERNAME = UniqueKeys0.KEY_USER_USERNAME;
    public static final UniqueKey<UserRecord> KEY_USER_PROFILE_LINK = UniqueKeys0.KEY_USER_PROFILE_LINK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentRecord, NotificationRecord> FKCOMMENT389790 = ForeignKeys0.FKCOMMENT389790;
    public static final ForeignKey<CommentRecord, PostRecord> FKCOMMENT460056 = ForeignKeys0.FKCOMMENT460056;
    public static final ForeignKey<FollowerRecord, NotificationRecord> FKFOLLOWER973342 = ForeignKeys0.FKFOLLOWER973342;
    public static final ForeignKey<FollowerRecord, UserRecord> FKFOLLOWER837875 = ForeignKeys0.FKFOLLOWER837875;
    public static final ForeignKey<LikeRecord, NotificationRecord> FKLIKE895787 = ForeignKeys0.FKLIKE895787;
    public static final ForeignKey<LikeRecord, PostRecord> FKLIKE225956 = ForeignKeys0.FKLIKE225956;
    public static final ForeignKey<NotificationRecord, UserRecord> FKNOTIFICATI729821 = ForeignKeys0.FKNOTIFICATI729821;
    public static final ForeignKey<PostRecord, UserRecord> FKPOST790237 = ForeignKeys0.FKPOST790237;
    public static final ForeignKey<PostRecord, CategoryRecord> FKPOST991094 = ForeignKeys0.FKPOST991094;
    public static final ForeignKey<PostTagRecord, TagRecord> FKPOST_TAG387460 = ForeignKeys0.FKPOST_TAG387460;
    public static final ForeignKey<PostTagRecord, PostRecord> FKPOST_TAG508815 = ForeignKeys0.FKPOST_TAG508815;
    public static final ForeignKey<RateRecord, NotificationRecord> FKRATE67125 = ForeignKeys0.FKRATE67125;
    public static final ForeignKey<RateRecord, PostRecord> FKRATE54619 = ForeignKeys0.FKRATE54619;
    public static final ForeignKey<TopRatedRecord, UserRecord> FKTOP_RATED153800 = ForeignKeys0.FKTOP_RATED153800;
    public static final ForeignKey<TopRatedRecord, CategoryRecord> FKTOP_RATED354657 = ForeignKeys0.FKTOP_RATED354657;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = createIdentity(Category.CATEGORY, Category.CATEGORY.CATEGORY_ID);
        public static Identity<NotificationRecord, Integer> IDENTITY_NOTIFICATION = createIdentity(Notification.NOTIFICATION, Notification.NOTIFICATION.NOTIFICATION_ID);
        public static Identity<PostRecord, Integer> IDENTITY_POST = createIdentity(Post.POST, Post.POST.POST_ID);
        public static Identity<TagRecord, Integer> IDENTITY_TAG = createIdentity(Tag.TAG, Tag.TAG.TAG_ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.USER_ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = createUniqueKey(Category.CATEGORY, "KEY_Category_PRIMARY", Category.CATEGORY.CATEGORY_ID);
        public static final UniqueKey<CategoryRecord> KEY_CATEGORY_NAME = createUniqueKey(Category.CATEGORY, "KEY_Category_Name", Category.CATEGORY.NAME);
        public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = createUniqueKey(Comment.COMMENT, "KEY_Comment_PRIMARY", Comment.COMMENT.NOTIFICATION_ID);
        public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "KEY_DATABASECHANGELOGLOCK_PRIMARY", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<FollowerRecord> KEY_FOLLOWER_PRIMARY = createUniqueKey(Follower.FOLLOWER, "KEY_Follower_PRIMARY", Follower.FOLLOWER.NOTIFICATION_ID);
        public static final UniqueKey<LikeRecord> KEY_LIKE_PRIMARY = createUniqueKey(Like.LIKE, "KEY_Like_PRIMARY", Like.LIKE.NOTIFICATION_ID);
        public static final UniqueKey<NotificationRecord> KEY_NOTIFICATION_PRIMARY = createUniqueKey(Notification.NOTIFICATION, "KEY_Notification_PRIMARY", Notification.NOTIFICATION.NOTIFICATION_ID);
        public static final UniqueKey<PostRecord> KEY_POST_PRIMARY = createUniqueKey(Post.POST, "KEY_Post_PRIMARY", Post.POST.POST_ID);
        public static final UniqueKey<PostTagRecord> KEY_POST_TAG_PRIMARY = createUniqueKey(PostTag.POST_TAG, "KEY_Post Tag_PRIMARY", PostTag.POST_TAG.TAG_ID, PostTag.POST_TAG.POST_ID);
        public static final UniqueKey<PostTagRecord> KEY_POST_TAG_TAG_ID = createUniqueKey(PostTag.POST_TAG, "KEY_Post Tag_Tag_ID", PostTag.POST_TAG.TAG_ID);
        public static final UniqueKey<PostTagRecord> KEY_POST_TAG_POST_ID = createUniqueKey(PostTag.POST_TAG, "KEY_Post Tag_Post_ID", PostTag.POST_TAG.POST_ID);
        public static final UniqueKey<RateRecord> KEY_RATE_PRIMARY = createUniqueKey(Rate.RATE, "KEY_Rate_PRIMARY", Rate.RATE.NOTIFICATION_ID);
        public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = createUniqueKey(Tag.TAG, "KEY_Tag_PRIMARY", Tag.TAG.TAG_ID);
        public static final UniqueKey<TagRecord> KEY_TAG_NAME = createUniqueKey(Tag.TAG, "KEY_Tag_Name", Tag.TAG.NAME);
        public static final UniqueKey<TopRatedRecord> KEY_TOP_RATED_PRIMARY = createUniqueKey(TopRated.TOP_RATED, "KEY_Top Rated_PRIMARY", TopRated.TOP_RATED.USER_ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_User_PRIMARY", User.USER.USER_ID);
        public static final UniqueKey<UserRecord> KEY_USER_NICKNAME = createUniqueKey(User.USER, "KEY_User_Nickname", User.USER.NICKNAME);
        public static final UniqueKey<UserRecord> KEY_USER_USERNAME = createUniqueKey(User.USER, "KEY_User_Username", User.USER.USERNAME);
        public static final UniqueKey<UserRecord> KEY_USER_PROFILE_LINK = createUniqueKey(User.USER, "KEY_User_Profile_Link", User.USER.PROFILE_LINK);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<CommentRecord, NotificationRecord> FKCOMMENT389790 = createForeignKey(models.talentDB.Keys.KEY_NOTIFICATION_PRIMARY, Comment.COMMENT, "FKComment389790", Comment.COMMENT.NOTIFICATION_ID);
        public static final ForeignKey<CommentRecord, PostRecord> FKCOMMENT460056 = createForeignKey(models.talentDB.Keys.KEY_POST_PRIMARY, Comment.COMMENT, "FKComment460056", Comment.COMMENT.POST_ID);
        public static final ForeignKey<FollowerRecord, NotificationRecord> FKFOLLOWER973342 = createForeignKey(models.talentDB.Keys.KEY_NOTIFICATION_PRIMARY, Follower.FOLLOWER, "FKFollower973342", Follower.FOLLOWER.NOTIFICATION_ID);
        public static final ForeignKey<FollowerRecord, UserRecord> FKFOLLOWER837875 = createForeignKey(models.talentDB.Keys.KEY_USER_PRIMARY, Follower.FOLLOWER, "FKFollower837875", Follower.FOLLOWER.USER_ID);
        public static final ForeignKey<LikeRecord, NotificationRecord> FKLIKE895787 = createForeignKey(models.talentDB.Keys.KEY_NOTIFICATION_PRIMARY, Like.LIKE, "FKLike895787", Like.LIKE.NOTIFICATION_ID);
        public static final ForeignKey<LikeRecord, PostRecord> FKLIKE225956 = createForeignKey(models.talentDB.Keys.KEY_POST_PRIMARY, Like.LIKE, "FKLike225956", Like.LIKE.POST_ID);
        public static final ForeignKey<NotificationRecord, UserRecord> FKNOTIFICATI729821 = createForeignKey(models.talentDB.Keys.KEY_USER_PRIMARY, Notification.NOTIFICATION, "FKNotificati729821", Notification.NOTIFICATION.USER_ID);
        public static final ForeignKey<PostRecord, UserRecord> FKPOST790237 = createForeignKey(models.talentDB.Keys.KEY_USER_PRIMARY, Post.POST, "FKPost790237", Post.POST.USER_ID);
        public static final ForeignKey<PostRecord, CategoryRecord> FKPOST991094 = createForeignKey(models.talentDB.Keys.KEY_CATEGORY_PRIMARY, Post.POST, "FKPost991094", Post.POST.CATEGORY_ID);
        public static final ForeignKey<PostTagRecord, TagRecord> FKPOST_TAG387460 = createForeignKey(models.talentDB.Keys.KEY_TAG_PRIMARY, PostTag.POST_TAG, "FKPost Tag387460", PostTag.POST_TAG.TAG_ID);
        public static final ForeignKey<PostTagRecord, PostRecord> FKPOST_TAG508815 = createForeignKey(models.talentDB.Keys.KEY_POST_PRIMARY, PostTag.POST_TAG, "FKPost Tag508815", PostTag.POST_TAG.POST_ID);
        public static final ForeignKey<RateRecord, NotificationRecord> FKRATE67125 = createForeignKey(models.talentDB.Keys.KEY_NOTIFICATION_PRIMARY, Rate.RATE, "FKRate67125", Rate.RATE.NOTIFICATION_ID);
        public static final ForeignKey<RateRecord, PostRecord> FKRATE54619 = createForeignKey(models.talentDB.Keys.KEY_POST_PRIMARY, Rate.RATE, "FKRate54619", Rate.RATE.POST_ID);
        public static final ForeignKey<TopRatedRecord, UserRecord> FKTOP_RATED153800 = createForeignKey(models.talentDB.Keys.KEY_USER_PRIMARY, TopRated.TOP_RATED, "FKTop Rated153800", TopRated.TOP_RATED.USER_ID);
        public static final ForeignKey<TopRatedRecord, CategoryRecord> FKTOP_RATED354657 = createForeignKey(models.talentDB.Keys.KEY_CATEGORY_PRIMARY, TopRated.TOP_RATED, "FKTop Rated354657", TopRated.TOP_RATED.CATEGORY_ID);
    }
}
