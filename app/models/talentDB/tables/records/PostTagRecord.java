/**
 * This class is generated by jOOQ
 */
package models.talentDB.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import models.talentDB.tables.PostTag;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Post Tag", schema = "talent", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"Tag_ID", "Post_ID"})
})
public class PostTagRecord extends UpdatableRecordImpl<PostTagRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 923321062;

    /**
     * Setter for <code>talent.Post Tag.Tag_ID</code>.
     */
    public void setTagId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>talent.Post Tag.Tag_ID</code>.
     */
    @Column(name = "Tag_ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getTagId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>talent.Post Tag.Post_ID</code>.
     */
    public void setPostId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>talent.Post Tag.Post_ID</code>.
     */
    @Column(name = "Post_ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getPostId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PostTag.POST_TAG.TAG_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PostTag.POST_TAG.POST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getTagId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPostId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTagRecord value1(Integer value) {
        setTagId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTagRecord value2(Integer value) {
        setPostId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTagRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostTagRecord
     */
    public PostTagRecord() {
        super(PostTag.POST_TAG);
    }

    /**
     * Create a detached, initialised PostTagRecord
     */
    public PostTagRecord(Integer tagId, Integer postId) {
        super(PostTag.POST_TAG);

        set(0, tagId);
        set(1, postId);
    }
}
