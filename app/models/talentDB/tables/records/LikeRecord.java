/**
 * This class is generated by jOOQ
 */
package models.talentDB.tables.records;


import models.talentDB.tables.Like;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(name = "Like", schema = "talent")
public class LikeRecord extends UpdatableRecordImpl<LikeRecord> implements Record4<Integer, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = 2017447574;

    /**
     * Create a detached LikeRecord
     */
    public LikeRecord() {
        super(Like.LIKE);
    }

    /**
     * Create a detached, initialised LikeRecord
     */
    public LikeRecord(Integer likeId, Integer postId, Integer userId, Timestamp date) {
        super(Like.LIKE);

        set(0, likeId);
        set(1, postId);
        set(2, userId);
        set(3, date);
    }

    /**
     * Getter for <code>talent.Like.Like_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "Like_ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getLikeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>talent.Like.Like_ID</code>.
     */
    public void setLikeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>talent.Like.Post_ID</code>.
     */
    @Column(name = "Post_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getPostId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>talent.Like.Post_ID</code>.
     */
    public void setPostId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>talent.Like.User_ID</code>.
     */
    @Column(name = "User_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>talent.Like.User_ID</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>talent.Like.Date</code>.
     */
    @Column(name = "Date", nullable = false)
    public Timestamp getDate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>talent.Like.Date</code>.
     */
    public void setDate(Timestamp value) {
        set(3, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Like.LIKE.LIKE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Like.LIKE.POST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Like.LIKE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Like.LIKE.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getLikeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPostId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LikeRecord value1(Integer value) {
        setLikeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LikeRecord value2(Integer value) {
        setPostId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LikeRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public LikeRecord value4(Timestamp value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LikeRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }
}
