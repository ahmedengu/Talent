/**
 * This class is generated by jOOQ
 */
package models.talentDB.tables.daos;


import models.talentDB.tables.Like;
import models.talentDB.tables.records.LikeRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LikeDao extends DAOImpl<LikeRecord, models.talentDB.tables.pojos.Like, Integer> {

    /**
     * Create a new LikeDao without any configuration
     */
    public LikeDao() {
        super(Like.LIKE, models.talentDB.tables.pojos.Like.class);
    }

    /**
     * Create a new LikeDao with an attached configuration
     */
    public LikeDao(Configuration configuration) {
        super(Like.LIKE, models.talentDB.tables.pojos.Like.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(models.talentDB.tables.pojos.Like object) {
        return object.getLikeId();
    }

    /**
     * Fetch records that have <code>Like_ID IN (values)</code>
     */
    public List<models.talentDB.tables.pojos.Like> fetchByLikeId(Integer... values) {
        return fetch(Like.LIKE.LIKE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>Like_ID = value</code>
     */
    public models.talentDB.tables.pojos.Like fetchOneByLikeId(Integer value) {
        return fetchOne(Like.LIKE.LIKE_ID, value);
    }

    /**
     * Fetch records that have <code>Post_ID IN (values)</code>
     */
    public List<models.talentDB.tables.pojos.Like> fetchByPostId(Integer... values) {
        return fetch(Like.LIKE.POST_ID, values);
    }

    /**
     * Fetch records that have <code>User_ID IN (values)</code>
     */
    public List<models.talentDB.tables.pojos.Like> fetchByUserId(Integer... values) {
        return fetch(Like.LIKE.USER_ID, values);
    }

    /**
     * Fetch records that have <code>Date IN (values)</code>
     */
    public List<models.talentDB.tables.pojos.Like> fetchByDate(Timestamp... values) {
        return fetch(Like.LIKE.DATE, values);
    }
}
