/**
 * This class is generated by jOOQ
 */
package models.talentDB.tables;


import models.talentDB.Keys;
import models.talentDB.Talent;
import models.talentDB.tables.records.PostRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Post extends TableImpl<PostRecord> {

    /**
     * The reference instance of <code>talent.Post</code>
     */
    public static final Post POST = new Post();
    private static final long serialVersionUID = -36321892;
    /**
     * The column <code>talent.Post.Post_ID</code>.
     */
    public final TableField<PostRecord, Integer> POST_ID = createField("Post_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>talent.Post.User_ID</code>.
     */
    public final TableField<PostRecord, Integer> USER_ID = createField("User_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>talent.Post.Category_ID</code>.
     */
    public final TableField<PostRecord, Integer> CATEGORY_ID = createField("Category_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>talent.Post.Total_Rating</code>.
     */
    public final TableField<PostRecord, Double> TOTAL_RATING = createField("Total_Rating", org.jooq.impl.SQLDataType.FLOAT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.FLOAT)), this, "");
    /**
     * The column <code>talent.Post.Date</code>.
     */
    public final TableField<PostRecord, Timestamp> DATE = createField("Date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");
    /**
     * The column <code>talent.Post.PostUrl</code>.
     */
    public final TableField<PostRecord, String> POSTURL = createField("PostUrl", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");
    /**
     * The column <code>talent.Post.RatingCount</code>.
     */
    public final TableField<PostRecord, Integer> RATINGCOUNT = createField("RatingCount", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");
    /**
     * The column <code>talent.Post.tags</code>.
     */
    public final TableField<PostRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>talent.Post</code> table reference
     */
    public Post() {
        this("Post", null);
    }

    /**
     * Create an aliased <code>talent.Post</code> table reference
     */
    public Post(String alias) {
        this(alias, POST);
    }

    private Post(String alias, Table<PostRecord> aliased) {
        this(alias, aliased, null);
    }

    private Post(String alias, Table<PostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostRecord> getRecordType() {
        return PostRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Talent.TALENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PostRecord, Integer> getIdentity() {
        return Keys.IDENTITY_POST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostRecord> getPrimaryKey() {
        return Keys.KEY_POST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostRecord>> getKeys() {
        return Arrays.<UniqueKey<PostRecord>>asList(Keys.KEY_POST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Post as(String alias) {
        return new Post(alias, this);
    }

    /**
     * Rename this table
     */
    public Post rename(String name) {
        return new Post(name, null);
    }
}
